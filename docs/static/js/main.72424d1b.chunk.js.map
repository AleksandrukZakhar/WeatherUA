{"version":3,"sources":["Components/Menu.js","Components/Clases/Link.js","Components/Header.js","Components/Text.js","Components/Location.js","Components/WeatherCard.js","Components/MiniWeatherCard.js","Components/WeatherBox.js","Components/Weather.js","Components/App.js","index.js"],"names":["Menu","setVisibleMenu","className","xmlns","viewBox","stroke","onClick","strokeLinecap","strokeLinejoin","strokeWidth","d","defaultProps","console","log","Link","text","href","Header","useState","visibleMenu","menuState","setMenuState","fillRule","clipRule","Text","title","subtitle","Location","setCoordinates","success","pos","crd","coords","lat","latitude","lon","longitude","accuracy","error","err","options","enableHighAccuracy","timeout","maximumAge","navigator","geolocation","getCurrentPosition","WeatherCard","dayOfWeek","dayOfMonth","month","min","max","image","src","alt","JSON","stringify","Math","round","parseInt","MiniWeatherCard","dayTime","temp","feelsLike","pressure","humidity","windSpeed","WeatherBox","data","element","setElement","dayTimeUA","map","daily","index","currentDayTime","wind_speed","weather","icon","uid","Weather","daysOfWeek","months","dayjs","locale","format","add","App","setData","coordinates","FetchWeather","a","url","fetch","res","json","response","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.72424d1b.chunk.js","sourcesContent":["import PropTypes from \"prop-types\";\n\nconst Menu = ({ setVisibleMenu }) => {\n  return (\n    <div className=\"w-7/12 h-96 m-auto bg-gray-600 opacity-75 absolute flex flex-column flex-1 md:hidden left-20 top-40\">\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        className=\"h-10 w-10 fill text-gray-50\"\n        viewBox=\"0 0 24 24\"\n        stroke=\"currentColor\"\n        onClick={() => {\n          setVisibleMenu(false);\n        }}\n      >\n        <path\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n          strokeWidth={2}\n          d=\"M6 18L18 6M6 6l12 12\"\n        />\n      </svg>\n    </div>\n  );\n};\n\nMenu.propTypes = {\n  setVisibleMenu: PropTypes.func,\n};\n\nMenu.defaultProps = {\n  setVisibleMenu: () => {\n    console.log(\"Menu.js setVisibleMenu collapsed\");\n  },\n};\n\nexport default Menu;\n","const Link = ({ text }) => {\n  return (\n    <p className=\"hidden md:flex text-gray-50 font-bold transform transition duration-300 hover:translate-y-2\">\n      <a href=\"google.com\">{text}</a>\n    </p>\n  );\n};\n\nexport default Link;\n","import { useState } from \"react\";\nimport Menu from \"./Menu\";\nimport Link from \"./Clases/Link\";\n\nconst Header = () => {\n  const [visibleMenu, setVisibleMenu] = useState(false);\n  const [menuState, setMenuState] = useState(\"flex\");\n\n  return (\n    <nav className=\"w-full h-16 bg-blue-600\">\n      <div className=\"flex flex-row flex-1 items-center justify-between h-16\">\n        <div className=\"flex space-x-2 ml-10\">\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            className=\"h-5 w-5 fill-current text-gray-50 mt-0.5\"\n            viewBox=\"0 0 20 20\"\n          >\n            <path\n              fillRule=\"evenodd\"\n              d=\"M10 2a1 1 0 011 1v1a1 1 0 11-2 0V3a1 1 0 011-1zm4 8a4 4 0 11-8 0 4 4 0 018 0zm-.464 4.95l.707.707a1 1 0 001.414-1.414l-.707-.707a1 1 0 00-1.414 1.414zm2.12-10.607a1 1 0 010 1.414l-.706.707a1 1 0 11-1.414-1.414l.707-.707a1 1 0 011.414 0zM17 11a1 1 0 100-2h-1a1 1 0 100 2h1zm-7 4a1 1 0 011 1v1a1 1 0 11-2 0v-1a1 1 0 011-1zM5.05 6.464A1 1 0 106.465 5.05l-.708-.707a1 1 0 00-1.414 1.414l.707.707zm1.414 8.486l-.707.707a1 1 0 01-1.414-1.414l.707-.707a1 1 0 011.414 1.414zM4 11a1 1 0 100-2H3a1 1 0 000 2h1z\"\n              clipRule=\"evenodd\"\n            />\n          </svg>\n          <span className=\"font-bold uppercase text-gray-50\">погода ua</span>\n        </div>\n        <div className=\"flex space-x-4 mr-10\">\n          <Link text=\"Головна\" />\n          <Link text=\"Про нас\" />\n        </div>\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          viewBox=\"0 0 20 20\"\n          className={`${menuState} md:hidden w-6 h-6 fill-current text-gray-50 h-5 w-5`}\n          onClick={() => {\n            setVisibleMenu(true);\n            setMenuState(\"hidden\");\n          }}\n        >\n          <path\n            fillRule=\"evenodd\"\n            d=\"M3 5a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zM3 10a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zM3 15a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1z\"\n            clipRule=\"evenodd\"\n          />\n        </svg>\n\n        {visibleMenu ? <Menu setVisibleMenu={setVisibleMenu()} /> : null}\n      </div>\n    </nav>\n  );\n};\n\nexport default Header;\n","const Text = ({ title, subtitle }) => {\n  return (\n    <div className=\"flex flex-col flex-1 items-center relative top-20\">\n      <p className=\"text-gray-900 font-bold text-5xl\">{title}</p>\n      <p className=\"text-blue-600 text-3xl\">{subtitle}</p>\n    </div>\n  );\n};\n\nexport default Text;\n","const Location = ({ setCoordinates }) => {\n  const success = (pos) => {\n    var crd = pos.coords;\n\n    if (crd != null) {\n      setCoordinates({\n        lat: crd.latitude,\n        lon: crd.longitude,\n        accuracy: crd.accuracy,\n      });\n    }\n    if (crd === null) {\n    }\n  };\n\n  const error = (err) => {\n    console.log(err);\n  };\n\n  let options = {\n    enableHighAccuracy: true,\n    timeout: 10000,\n    maximumAge: 300000,\n  };\n\n  const GetLocation = () => {\n    navigator.geolocation.getCurrentPosition(success, error, options);\n  };\n\n  return (\n    <div className=\"flex flex-1 flex-row items-center justify-center mt-36\">\n      <button\n        className=\"bg-blue-600 text-gray-50 rounded w-32 font-bold hover:bg-blue-400 absolute\"\n        onClick={() => GetLocation()}\n      >\n        Отримати геолокацію\n      </button>\n    </div>\n  );\n};\n\nexport default Location;\n","const WeatherCard = ({ dayOfWeek, dayOfMonth, month, min, max, image }) => {\n  return (\n    <div className=\"flex flex-none flex-col items-center justify-center relative top-16 left-16 border border-gray-200 rounded w-36 p-4 text-sm lg:text-xl shadow-2xl\">\n      <span>{dayOfWeek}</span>\n      <h1 className=\"font-bold text-2xl\">{dayOfMonth}</h1>\n      <span>{month}</span>\n      <img src={`http://openweathermap.org/img/wn/${image}@2x.png`} alt=\"\" />\n      <div className=\"space-x-3\">\n        <span className=\"text-blue-400\">мін.</span>\n        <span className=\"text-blue-400\">макс.</span>\n      </div>\n      <div className=\"space-x-4\">\n        <span>{JSON.stringify(Math.round(parseInt(min, 10)))}°</span>\n        <span>{JSON.stringify(Math.round(parseInt(max, 10)))}°</span>\n      </div>\n    </div>\n  );\n};\n\nexport default WeatherCard;\n","const MiniWeatherCard = ({\n  dayTime,\n  temp,\n  feelsLike,\n  pressure,\n  humidity,\n  windSpeed,\n  image,\n}) => {\n  return (\n    <div className=\"flex flex-col relative top-12 text-center border border-gray-200 rounded w-18 h-72\">\n      <p className=\"font-bold text-xl\">{dayTime}</p>\n      <img\n        src={`http://openweathermap.org/img/wn/${image}@2x.png`}\n        alt=\"\"\n        className=\"relative\"\n      />\n      <p className=\"font-bold text-3xl\">{temp}</p>\n      <p className=\"text-gray-400\">{feelsLike}</p>\n      <p className=\"text-gray-400\">{pressure}</p>\n      <p className=\"text-gray-400\">{humidity}</p>\n      <p className=\"text-gray-400\">{windSpeed}</p>\n    </div>\n  );\n};\n\nexport default MiniWeatherCard;\n","import { useState } from \"react\";\nimport MiniWeatherCard from \"./MiniWeatherCard\";\nimport { uid } from \"uid\";\n\nconst WeatherBox = ({ data }) => {\n  const [element, setElement] = useState(0);\n  const dayTime = [\"morn\", \"day\", \"eve\", \"night\"];\n  const dayTimeUA = [\"Ранок\", \"День\", \"Вечір\", \"Ніч\"];\n\n  if (data === null) {\n    return null;\n  }\n\n  const NextHandler = () => {\n    setElement(element + 1);\n\n    if (element === 7) {\n      setElement(0);\n    }\n  };\n\n  const PreviousHandler = () => {\n    setElement(element - 1);\n\n    if (element === 0) {\n      setElement(7);\n    }\n  };\n\n  console.log(element);\n  return (\n    <div className=\"flex flex-1 flex-row w-6/12 h-96 mt-28 ml-14 relative right-auto border border-gray-200 rounded shadow-2xl\">\n      <div className=\"flex flex-col relative top-32 left-6 w-32 h-40 text-left\">\n        <p className=\"text-gray-400\">Температура</p>\n        <p className=\"text-gray-400\">Відчувається як</p>\n        <p className=\"text-gray-400\">Тиск мм</p>\n        <p className=\"text-gray-400\">Вологість %</p>\n        <p className=\"text-gray-400\">Вітер м/сек</p>\n      </div>\n      <div className=\"flex flex-row space-x-6 relative left-16\">\n        {data.map((daily, index) => {\n          if (index === element) {\n            return dayTime.map((currentDayTime, index) => {\n              return (\n                <MiniWeatherCard\n                  key={uid()}\n                  dayTime={dayTimeUA[index]}\n                  temp={Math.round(parseInt(daily.temp[currentDayTime], 10))}\n                  feelsLike={daily.temp[currentDayTime]}\n                  pressure={daily.pressure}\n                  humidity={daily.humidity}\n                  windSpeed={daily.wind_speed}\n                  image={daily.weather[0].icon}\n                />\n              );\n            });\n          }\n\n          return null;\n        })}\n      </div>\n      <div className=\"flex flex-row space-x-32\">\n        <button\n          onClick={() => PreviousHandler()}\n          className=\"bg-blue-600 text-gray-50 rounded w-32 font-bold hover:bg-blue-400 absolute mt-80\"\n        >\n          Попередній День\n        </button>\n        <button\n          onClick={() => NextHandler()}\n          className=\"bg-blue-600 text-gray-50 rounded w-32 font-bold hover:bg-blue-400 absolute mt-80\"\n        >\n          Наступний День\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default WeatherBox;\n","import WeatherCard from \"./WeatherCard\";\nimport WeatherBox from \"./WeatherBox\";\nimport { uid } from \"uid\";\nimport dayjs from \"dayjs\";\n\nconst Weather = ({ data }) => {\n  const daysOfWeek = [\n    \"Неділя\",\n    \"Понеділок\",\n    \"Вівторок\",\n    \"Середа\",\n    \"Четвер\",\n    \"Пятниця\",\n    \"Субота\",\n  ];\n  const months = [\n    \"Січень\",\n    \"Лютий\",\n    \"Березень\",\n    \"Квітень\",\n    \"Травень\",\n    \"Червень\",\n    \"Липень\",\n    \"Серпень\",\n    \"Вересень\",\n    \"Жовтень\",\n    \"Листопад\",\n    \"Грудень\",\n  ];\n  let dayOfWeek = dayjs().locale(\"ua\").format(\"d\");\n  let dayOfMonth = dayjs().format(\"D\");\n  const month = dayjs().locale(\"ua\").format(\"M\");\n\n  return (\n    <>\n      <div className=\"flex flex-row flex-none space-x-10\">\n        {data.map((daily, index) => {\n          if (index > 0) {\n            dayOfWeek = dayjs().add(index, \"day\").locale(\"ua\").format(\"d\");\n            dayOfMonth = dayjs().add(index, \"day\").locale(\"ua\").format(\"D\");\n          }\n          return (\n            <WeatherCard\n              key={uid()}\n              min={daily.temp.min}\n              max={daily.temp.max}\n              image={daily.weather[0].icon}\n              dayOfWeek={daysOfWeek[dayOfWeek]}\n              dayOfMonth={dayOfMonth}\n              month={months[month]}\n            />\n          );\n        })}\n      </div>\n      <WeatherBox data={data} />\n    </>\n  );\n};\n\nexport default Weather;\n","import React, { useState } from \"react\";\nimport Header from \"./Header\";\nimport Text from \"./Text\";\nimport Location from \"./Location\";\nimport Weather from \"./Weather\";\n\nconst App = () => {\n  const [data, setData] = useState(null);\n  const [coordinates, setCoordinates] = useState({\n    lat: null,\n    lon: null,\n    accuracy: null,\n  });\n\n  const FetchWeather = async () => {\n    const key = \"fb36ff8457a47f22e45bbe7a3777961e\";\n\n    const url = `https://api.openweathermap.org/data/2.5/onecall?lat=${coordinates.lat}&lon=${coordinates.lon}&appid=${key}&units=metric&lang=ua`;\n\n    if (data !== null) {\n      return;\n    }\n\n    const res = await fetch(url);\n    const response = await res.json();\n\n    if (response) {\n      setData(response.daily);\n    }\n  };\n\n  if (coordinates.lat && coordinates.lon !== null) {\n    FetchWeather();\n  }\n\n  return (\n    <>\n      <Header />\n      <Text title=\"Погода UA\" subtitle=\"Погода з усього світу.\" />\n      <Location setCoordinates={setCoordinates} />\n      {data ? <Weather data={data} /> : null}\n    </>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./Components/App\";\nimport \"./Styles/app.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}